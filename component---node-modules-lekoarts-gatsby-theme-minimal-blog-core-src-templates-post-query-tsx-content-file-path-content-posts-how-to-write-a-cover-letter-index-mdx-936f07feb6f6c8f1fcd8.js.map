{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-how-to-write-a-cover-letter-index-mdx-936f07feb6f6c8f1fcd8.js","mappings":"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","sources":["webpack://Robaita/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://Robaita/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://Robaita/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://Robaita/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://Robaita/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://Robaita/./content/posts/how-to-write-a-cover-letter/index.mdx","webpack://Robaita/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Overview\"), \"\\n\", React.createElement(_components.p, null, \"In many job applications, you might have noticed that hiring managers or recruiters often ask for a cover letter. Whether they actually read it is a different discussion, but the request is common. Sometimes, it's optional, while other times it's mandatory. In this blog, we'll cover the following:\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"What is a cover letter?\"), \"\\n\", React.createElement(_components.li, null, \"Why is it required?\"), \"\\n\", React.createElement(_components.li, null, \"How do you write one?\"), \"\\n\", React.createElement(_components.li, null, \"A bonus tip: How to write a cover letter in just 2 minutes!\\nLet's start by understanding what a cover letter is.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"What is a cover letter?\"), \"\\n\", React.createElement(_components.p, null, \"There are countless definitions of a cover letter online, but for me, it's simply a document that aligns you with the job you're applying for. It explains why you're interested in the position and what motivates you to apply. That's all there is to it. \", React.createElement(\"br\")), \"\\n\", React.createElement(_components.p, null, \"The main principle of a cover letter is straightforward: \", React.createElement(\"strong\", null, \"\\\"Write it so compellingly that the hiring manager is eager to call you. \"), \"\\\" It should speak their language and convince them that you're the best fit for the job. If you get the call, the cover letter has done its job. It's essential to personalize it for both the hiring manager and the organization.\"), \"\\n\", React.createElement(_components.h2, null, \"Why is it Required?\"), \"\\n\", React.createElement(_components.p, null, \"A cover letter serves one primary purpose: to increase your chances of getting that call. It bridges the gap between the job description and your resume, offering a dynamic document that highlights how you can solve the employer's problems. Your resume is static, but the cover letter is where you can tailor your pitch to the specific role 🤔.\"), \"\\n\", React.createElement(_components.h2, null, \"How Do You Write a Cover Letter?\"), \"\\n\", React.createElement(_components.p, null, \"There are many approaches to writing a cover letter, but I follow a simple three-paragraph structure:\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(\"strong\", null, \"First Paragraph: Setting the Context\"), \" \", React.createElement(\"br\"), \"\\na. Introduce yourself and your experience. \", React.createElement(\"br\"), \"\\nb. Mention the company and the position you're applying for. \", React.createElement(\"br\"), \"\\nc. Explain why you love this job. \", React.createElement(\"br\"), \"\\nd. Highlight three reasons why you're the best fit. \", React.createElement(\"br\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(\"strong\", null, \"Second Paragraph: Aligning with the Role\"), \" \", React.createElement(\"br\"), \"\\na. Show that you can do the job by discussing your relevant experience. \", React.createElement(\"br\"), \"\\nb. Reflect the language used in the job description. \", React.createElement(\"br\"), \"\\nc. Quantify your achievements (e.g., \\\"increased accuracy by X%\\\", \\\"reduced time complexity by Y%\\\", or \\\"handled Z concurrent users\\\"). \", React.createElement(\"br\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(\"strong\", null, \"Third Paragraph: Connecting Emotionally\"), \" \", React.createElement(\"br\"), \"\\na. Express how this role aligns with your career aspirations. \", React.createElement(\"br\"), \"\\nb. Highlight how your goals match the company's long-term vision and mission.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Bonus: How to Write a Cover Letter in Just 2 Minutes\"), \"\\n\", React.createElement(_components.p, null, \"If you're actively job hunting and applying to 15-20 positions daily, writing a unique cover letter for each can be overwhelming. But don't worry—AI can help you out 🤫.\"), \"\\n\", React.createElement(_components.p, null, \"I've crafted some prompts you can use with ChatGPT to generate a personalized cover letter in just 2 minutes. The cover letter will cover all the points mentioned above and be tailored to the hiring manager and the company. Let's explore these prompts.\"), \"\\n\", React.createElement(_components.h3, null, \"Job description\"), \"\\n\", React.createElement(_components.p, null, \"Start by crafting the job description. Most job portals like LinkedIn provide these details—just copy and paste them into a text file.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Company Name: [Insert company name here]\\nHiring Manager Name: [Insert hiring manager's name here]\\nCompany Location: [Optional, but add if available]\\nAbout the Company: [Usually in the job description or the company's about page]\\nAbout the Role: [Optional, if available]\\nResponsibilities: [Usually provided]\\nQualifications: [Optional, add if available]\\nRequired Skills: [Usually provided]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Resume\"), \"\\n\", React.createElement(_components.p, null, \"Ensure your resume contains the necessary details and keep a text copy handy.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Your Name: \\nExperiences:\\nSkills:\\nQualifications:\\nProject Details:\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Prompts\"), \"\\n\", React.createElement(_components.p, null, \"Let's use the prompt one by one to start composing the cover letter.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Keep the below Job description in memory and wait for further queries\\n[put the job description here]\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Keep my below resume in memory and wait for further queries \\n[ put your text resume here]\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Now we need to write a cover letter, The cover letter would have three paragraphs, the first one would describe why we are applying for this position, second paragraph would introduce why I am a good fit for this position and the third one would describe, how my aspirations are connected with company vision and mission. \\nWe would begin with first paragraph, keep the below points while composing the paragraph and set the word limit as 50 words.\\n- Keep Hiring manager name\\n- what company I am applying and for what position I am applying\\n- describe why i love their work and that made me interested to apply for this position\\n- end the paragraph with, here is the three reasons why I would be a good fit for this position\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Great, lets write the second paragraph, set the word limit to 150 words.\\n- take the required skills and responsibilities from the job description and consider my resume, write three main key points in bullets about how I am a great fit for responsibilities and the required skills.\\n- Mirror the language of the job description while composing the bullets\\n- For each bullet, quantize each statement (make them measurable) and back them by numbers.\\n\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"great, now lets gind the cover letter with the last paragraph, again set the word limit to 50 words.\\n- show my emotions around my aspirations \\n- how my goals are aligned with company vision\\n- use the sentences like, what I am looking as my career goal is aligned with the large goal that [company] is doing\\n\")), \"\\n\", React.createElement(_components.p, null, \"Here we have attached a persona to the chat gpt so that it would act like that and make the cover letter more professional\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Combine first, second and last paragraphs. Add the below sentence at the end of the cover letter\\nThanking You,\\nMy Name \\n\\nFurther, Act as a technical writer and then look at the cover letter for consistency of information, story line and grammatical errors.\\n\")), \"\\n\", React.createElement(_components.p, null, \"If you reached here, that means you have compose your cover letter. Congratulation buddy 👏㊗️.\"), \"\\n\", React.createElement(\"strong\", null, \" Watch youtube video for the demonstration of the approach \"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=0M6rhUHRBTI\"\n  }, React.createElement(_components.img, {\n    src: \"https://img.youtube.com/vi/0M6rhUHRBTI/0.jpg\",\n    alt: \"A live case study\"\n  })), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"\"\n  }, \"A live demonstration of the approach\"), \"\\n[//]: ## References\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"D:/Codes/robaita.github.io/content/posts/how-to-write-a-cover-letter/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","p","blockquote","ol","li","h3","pre","code","img","_provideComponents","components","start","alt","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}